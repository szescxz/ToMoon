on:
  push:
    tags:        
      - 'v*'           # Push events to every tag not containing /

name:  ToMoon Auto Build

jobs:
  linux_amd64:
    name: Linux AMD64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment variables
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup folder structure
        run: mkdir -p tmp/core

      - name: Get prebuilt Clash.Meta download link
        uses: actions/github-script@v6
        id: core-download-link
        with:
          script: |
            const resp = await github.rest.repos.getLatestRelease({
              owner: 'MetaCubeX',
              repo: 'Clash.Meta'
            })
            const version = resp.data.tag_name
            for (const asset of resp.data.assets)
            {
              if (asset.name == `clash.meta-linux-amd64-${version}.gz`)
              {
                return asset.browser_download_url
              }
            }
          result-encoding: string
      - name: Download prebuilt Clash.Meta
        env:
          DOWNLOAD_LINK: ${{ steps.core-download-link.outputs.result }}
        run: wget "${DOWNLOAD_LINK}" -O - | gunzip -c > tmp/core/clash

      - name: Download GeoIP data
        run: wget "https://github.com/MetaCubeX/meta-rules-dat/raw/release/geoip.dat" -O tmp/core/GeoIP.dat

      - name: Download yacd
        run: |
          pushd tmp/core
          wget https://github.com/haishanh/yacd/releases/latest/download/yacd.tar.xz -O- | tar xvJ
          mv public web
          popd

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.12.2
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build usdpl-front
        run: |
          git clone https://github.com/NGnius/usdpl-rs tmp/usdpl
          pushd tmp/usdpl/usdpl-front/
          git checkout 7e2aa1ccb707dff5775f46de8948dd0ab59444f8
          cargo install wasm-pack
          ./build.sh decky
          popd
          mv tmp/usdpl/usdpl-front/pkg src/usdpl
          pnpm i

      - name: Build Decky plugin frontend
        run: pnpm run build
        working-directory: .

      - name: Build subscription import page
        run: |
          npm i
          npm run build
        working-directory: tomoon-web

      - name: Build backend
        uses: ClementTsang/cargo-action@v0.0.2
        with:
          command: build
          directory: ./backend
          args: --target x86_64-unknown-linux-gnu --release
          use-cross: true
          cross-version: 0.2.4

      - name: Prepare package
        run: |
          mkdir -p ./release/tomoon/bin/core/web
          mkdir -p ./release/tomoon/dist
          cp backend/target/x86_64-unknown-linux-gnu/release/tomoon ./release/tomoon/bin/tomoon
          cp ./dist/index.js ./release/tomoon/dist/index.js
          cp main.py ./release/tomoon/main.py
          cp plugin.json ./release/tomoon/plugin.json
          cp package.json ./release/tomoon/package.json
          cp -r ./tmp/core ./release/tomoon/bin/
          cp -r ./tomoon-web/dist ./release/tomoon/web
          cd ./release
          zip -r tomoon-${{ env.RELEASE_VERSION }}.zip tomoon
          cd ..
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tomoon-${{ env.RELEASE_VERSION }}.zip
          asset_name: tomoon-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
